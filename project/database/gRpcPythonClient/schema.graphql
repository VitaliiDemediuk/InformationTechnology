schema {
    query: Query
}

type TableListItem {
    id: ID!
    name: String!
}

type GetTableListResult {
    success: Boolean!
    errors: [String!]
    tables_list: [TableListItem!]
}

type ColumnInfo {
    name: String!
    type: String!
    lower_limit: Int
    upper_limit: Int
}

type TableInfo {
    table_name: String!
    columns: [ColumnInfo!]
}

type GetTableInfoResult {
    success: Boolean!
    errors: [String!]
    table_info: TableInfo
}

type IntegerWrapper {
    int_value: Int!
}

type RealWrapper {
    real_value: Float!
}

type CharWrapper {
    char_value: String!
}

type StringWrapper {
    str_value: String
}

type File {
    filename: String!
}

type IntervalInteger {
    int_value: Int!
}

union Cell = IntegerWrapper | RealWrapper | CharWrapper | StringWrapper | File | IntervalInteger

type Row {
    row_id: Int
    cells: [Cell]
}

type Table {
    rows: [Row!]
}

type GetTableResult {
    success: Boolean!
    errors: [String!]
    table: Table
}

type Query {
    getTableList: GetTableListResult!
    getTableInfo(table_id: ID): GetTableInfoResult
    getTable(table_id: ID): GetTableResult
}